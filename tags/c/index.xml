<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on GTKer.com</title><link>https://gtker.com/tags/c/</link><description>Recent content in C on GTKer.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>contact@gtker.com (Gtker)</managingEditor><webMaster>contact@gtker.com (Gtker)</webMaster><lastBuildDate>Thu, 14 Jan 2021 01:48:56 +0000</lastBuildDate><atom:link href="https://gtker.com/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Running assembly on the BL602 RISC-V microcontroller and directly controlling GPIO</title><link>https://gtker.com/running-assembly-on-the-bl602-risc-v-microcontroller-and-directly-controlling-gpio/</link><pubDate>Thu, 14 Jan 2021 01:48:56 +0000</pubDate><author>contact@gtker.com (Gtker)</author><guid>https://gtker.com/running-assembly-on-the-bl602-risc-v-microcontroller-and-directly-controlling-gpio/</guid><description>The Boufallo Lab BL602 is a 32 bit RISC-V microcontroller with support for 2.4 GHz WiFi and Bluetooth Low Energy 5.0. It has an official SDK, however even the “Hello World example” includes a large amount of boilerplate. This article will show how to manipulate the GPIO pins using assembly and no dependencies.
Git repository The full assembly and a makefile can be found in this Github repository.
Background As seen on the Pine64 BL602 EVB ver 1.</description></item></channel></rss>