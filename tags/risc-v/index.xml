<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RISC-V on GTKer.com</title><link>/tags/risc-v/</link><description>Recent content in RISC-V on GTKer.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Jan 2021 01:48:56 +0100</lastBuildDate><atom:link href="/tags/risc-v/index.xml" rel="self" type="application/rss+xml"/><item><title>Running assembly on the BL602 RISC-V microcontroller and directly controlling GPIO</title><link>/running-assembly-on-the-bl602-risc-v-microcontroller-and-directly-controlling-gpio/</link><pubDate>Thu, 14 Jan 2021 01:48:56 +0100</pubDate><guid>/running-assembly-on-the-bl602-risc-v-microcontroller-and-directly-controlling-gpio/</guid><description>&lt;p>The Boufallo Lab BL602 is a 32 bit RISC-V microcontroller with support for 2.4 GHz WiFi and Bluetooth Low Energy 5.0.
It has an &lt;a href="https://github.com/bouffalolab/bl_iot_sdk">official SDK&lt;/a>, however even the “Hello World example” includes a large amount of boilerplate.
This article will show how to manipulate the GPIO pins using assembly and no dependencies.&lt;/p></description></item></channel></rss>